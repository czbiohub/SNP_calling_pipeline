install.packages("ada")
load("/Users/lincoln.harris/Desktop/maca_R_objs/facs_Brain_Non-microglia_seurat_tiss.Robj")
TSNEPlot(object = tiss, do.label = T)
View(tiss@meta.data)
sessionInfo()
sessionInfo()
install.packages("compiler")
install.packages("compiler_3.4.3")
install.packages("igraph")
library(Seurat)
sessionInfo()
install.packages("gofortran")
install.packages("gfortran")
install.packages("igraph_1.2.1")
install.packages("igraph_1.2.2")
install.packages(igraph)
install.packages("igraph")
install.packages("igraph")
install.packages("igraph1.2.1")
install.packages("igraph")
install.packages("igraph")
library(Seurat)
library(Seurat)
library(monocle)
raw_data <- read.csv('all_NE_raw.csv', header=TRUE)
row.names(raw_data) <- raw_data[,1]
raw_data <- raw_data[ ,-1]
meta_data <- read.csv('all_NE_meta.csv', header=TRUE)
row.names(meta_data) <- meta_data[,1]
meta_data <- meta_data[ ,-1]
dim(raw_data)
dim(meta_data)
meta_data_anno <- new("AnnotatedDataFrame", data = meta_data)
cds_NE <- newCellDataSet(cellData = as.matrix(raw_data), phenoData = meta_data_anno, featureData = NULL, expressionFamily = negbinomial.size())
cds_NE <- estimateSizeFactors(cds_NE)
cds_NE <- estimateDispersions(cds_NE)
cds_NE <- detectGenes(cds_NE, min_expr = 0.1)
fData(cds_NE)$use_for_ordering <- fData(cds_NE)$num_cells_expressed > 0.05 * ncol(cds_NE)
all_NE_expressed_genes <- row.names(subset(fData(cds_NE), num_cells_expressed >= 10))
plot_pc_variance_explained(cds_NE, return_all = F, verbose = T, max_components = 100)
cds_NE <- reduceDimension(cds_NE, max_components = 2, norm_method = 'log', num_dim = 20, reduction_method = 'tSNE', verbose = T)
cds_NE <- clusterCells(cds_NE, verbose = F)
plot_cell_clusters(cds_NE)
plot_rho_delta(cds_NE, rho_threshold = 2, delta_threshold = 4 )
cds_NE <- clusterCells(cds_NE, rho_threshold = 3, delta_threshold = 10, skip_rho_sigma = T, verbose = F)
plot_cell_clusters(cds_NE)
clustering_DEG_genes_NE <- differentialGeneTest(cds_NE[all_NE_expressed_genes,], fullModelFormulaStr = '~Cluster')
all_NE_ordering_genes <-
row.names(clustering_DEG_genes_NE)[order(clustering_DEG_genes_NE$qval)][1:1000]
cds_NE <- setOrderingFilter(cds_NE, ordering_genes = all_NE_ordering_genes)
cds_NE <- reduceDimension(cds_NE, method = 'DDRTree')
cds_NE <- orderCells(cds_NE)
plot_cell_trajectory(cds_NE, color_by = "State")
plot_cell_trajectory(cds_NE, color_by = "origin")
plot_cell_trajectory(cds_NE, color_by = "age")
plot_cell_trajectory(cds_NE, color_by = "Cluster")
# most basic case
plot_complex_cell_trajectory(cds_NE, color_by = 'Cluster')
plot_complex_cell_trajectory(cds_NE, color_by = 'State')
plot_complex_cell_trajectory(cds_NE, color_by = 'age')
# a bit more complicated
plot_complex_cell_trajectory(cds_NE, color_by = 'age', cell_size = 0.5, cell_link_size = 0.3) + scale_size(range = c(0.2, 0.2))
all_BEAM1 <- BEAM(cds_NE, branch_point = 1)
all_BEAM1 <- all_BEAM1[order(all_BEAM1$qval),]
plot_genes_branched_heatmap(cds_NE[row.names(subset(all_BEAM1, qval < 1e-20)),], branch_point = 1, cluster_rows = T, show_rownames = T)
dim(all_BEAM1)
all_BEAM1_order <- all_BEAM1[order(all_BEAM1$qval),]
dim(all_BEAM1_order)
sub_BEAM1 <- all_BEAM1_order[1:100,]
sub_BEAM1 <- sub_BEAM1[row.names(subset(sub_BEAM1, num_cells_expressed > 100)),]
dim(sub_BEAM1)
#write.csv(sub_BEAM1, file = "sub_BEAM1.csv")
diff_NE <- differentialGeneTest(cds_NE[all_NE_expressed_genes,], fullModelFormulaStr = "~sm.ns(Pseudotime)")
sig_gene_names <- row.names(subset(diff_NE, qval < 1e-45))
plot_pseudotime_heatmap(cds_NE[sig_gene_names,], show_rownames = T)
install.packages("rmarkdown")
library(monocle)
raw_data <- read.csv('all_NE_raw.csv', header=TRUE)
row.names(raw_data) <- raw_data[,1]
raw_data <- raw_data[ ,-1]
meta_data <- read.csv('all_NE_meta.csv', header=TRUE)
row.names(meta_data) <- meta_data[,1]
meta_data <- meta_data[ ,-1]
dim(raw_data)
dim(meta_data)
meta_data_anno <- new("AnnotatedDataFrame", data = meta_data)
cds_NE <- newCellDataSet(cellData = as.matrix(raw_data), phenoData = meta_data_anno, featureData = NULL, expressionFamily = negbinomial.size())
cds_NE <- estimateSizeFactors(cds_NE)
cds_NE <- estimateDispersions(cds_NE)
cds_NE <- detectGenes(cds_NE, min_expr = 0.1)
fData(cds_NE)$use_for_ordering <- fData(cds_NE)$num_cells_expressed > 0.05 * ncol(cds_NE)
all_NE_expressed_genes <- row.names(subset(fData(cds_NE), num_cells_expressed >= 10))
plot_pc_variance_explained(cds_NE, return_all = F, verbose = T, max_components = 100)
cds_NE <- reduceDimension(cds_NE, max_components = 2, norm_method = 'log', num_dim = 20, reduction_method = 'tSNE', verbose = T)
cds_NE <- clusterCells(cds_NE, verbose = F)
plot_cell_clusters(cds_NE)
plot_rho_delta(cds_NE, rho_threshold = 2, delta_threshold = 4 )
cds_NE <- clusterCells(cds_NE, rho_threshold = 3, delta_threshold = 10, skip_rho_sigma = T, verbose = F)
plot_cell_clusters(cds_NE)
clustering_DEG_genes_NE <- differentialGeneTest(cds_NE[all_NE_expressed_genes,], fullModelFormulaStr = '~Cluster')
all_NE_ordering_genes <-
row.names(clustering_DEG_genes_NE)[order(clustering_DEG_genes_NE$qval)][1:1000]
cds_NE <- setOrderingFilter(cds_NE, ordering_genes = all_NE_ordering_genes)
cds_NE <- reduceDimension(cds_NE, method = 'DDRTree')
cds_NE <- orderCells(cds_NE)
plot_cell_trajectory(cds_NE, color_by = "State")
plot_cell_trajectory(cds_NE, color_by = "origin")
plot_cell_trajectory(cds_NE, color_by = "age")
plot_cell_trajectory(cds_NE, color_by = "Cluster")
# most basic case
plot_complex_cell_trajectory(cds_NE, color_by = 'Cluster')
plot_complex_cell_trajectory(cds_NE, color_by = 'State')
plot_complex_cell_trajectory(cds_NE, color_by = 'age')
# a bit more complicated
plot_complex_cell_trajectory(cds_NE, color_by = 'age', cell_size = 0.5, cell_link_size = 0.3) + scale_size(range = c(0.2, 0.2))
#all_BEAM1 <- BEAM(cds_NE, branch_point = 1)
#all_BEAM1 <- all_BEAM1[order(all_BEAM1$qval),]
#plot_genes_branched_heatmap(cds_NE[row.names(subset(all_BEAM1, qval < 1e-20)),], branch_point = 1, cluster_rows = T, show_rownames = T)
#dim(all_BEAM1)
#all_BEAM1_order <- all_BEAM1[order(all_BEAM1$qval),]
#dim(all_BEAM1_order)
#sub_BEAM1 <- all_BEAM1_order[1:100,]
#sub_BEAM1 <- sub_BEAM1[row.names(subset(sub_BEAM1, num_cells_expressed > 100)),]
#dim(sub_BEAM1)
#write.csv(sub_BEAM1, file = "sub_BEAM1.csv")
#diff_NE <- differentialGeneTest(cds_NE[all_NE_expressed_genes,], fullModelFormulaStr = "~sm.ns(Pseudotime)")
#sig_gene_names <- row.names(subset(diff_NE, qval < 1e-45))
#plot_pseudotime_heatmap(cds_NE[sig_gene_names,], show_rownames = T)
library(monocle)
raw_data <- read.csv('all_NE_raw.csv', header=TRUE)
row.names(raw_data) <- raw_data[,1]
raw_data <- raw_data[ ,-1]
meta_data <- read.csv('all_NE_meta.csv', header=TRUE)
row.names(meta_data) <- meta_data[,1]
meta_data <- meta_data[ ,-1]
dim(raw_data)
dim(meta_data)
meta_data_anno <- new("AnnotatedDataFrame", data = meta_data)
cds_NE <- newCellDataSet(cellData = as.matrix(raw_data), phenoData = meta_data_anno, featureData = NULL, expressionFamily = negbinomial.size())
cds_NE <- estimateSizeFactors(cds_NE)
cds_NE <- estimateDispersions(cds_NE)
cds_NE <- detectGenes(cds_NE, min_expr = 0.1)
fData(cds_NE)$use_for_ordering <- fData(cds_NE)$num_cells_expressed > 0.05 * ncol(cds_NE)
all_NE_expressed_genes <- row.names(subset(fData(cds_NE), num_cells_expressed >= 10))
plot_pc_variance_explained(cds_NE, return_all = F, verbose = T, max_components = 100)
cds_NE <- reduceDimension(cds_NE, max_components = 2, norm_method = 'log', num_dim = 20, reduction_method = 'tSNE', verbose = T)
cds_NE <- clusterCells(cds_NE, verbose = F)
plot_cell_clusters(cds_NE)
plot_rho_delta(cds_NE, rho_threshold = 2, delta_threshold = 4 )
cds_NE <- clusterCells(cds_NE, rho_threshold = 3, delta_threshold = 10, skip_rho_sigma = T, verbose = F)
plot_cell_clusters(cds_NE)
clustering_DEG_genes_NE <- differentialGeneTest(cds_NE[all_NE_expressed_genes,], fullModelFormulaStr = '~Cluster')
all_NE_ordering_genes <-
row.names(clustering_DEG_genes_NE)[order(clustering_DEG_genes_NE$qval)][1:1000]
cds_NE <- setOrderingFilter(cds_NE, ordering_genes = all_NE_ordering_genes)
cds_NE <- reduceDimension(cds_NE, method = 'DDRTree')
cds_NE <- orderCells(cds_NE)
plot_cell_trajectory(cds_NE, color_by = "State")
plot_cell_trajectory(cds_NE, color_by = "origin")
plot_cell_trajectory(cds_NE, color_by = "age")
plot_cell_trajectory(cds_NE, color_by = "Cluster")
# most basic case
plot_complex_cell_trajectory(cds_NE, color_by = 'Cluster')
plot_complex_cell_trajectory(cds_NE, color_by = 'State')
plot_complex_cell_trajectory(cds_NE, color_by = 'age')
# a bit more complicated
plot_complex_cell_trajectory(cds_NE, color_by = 'age', cell_size = 0.5, cell_link_size = 0.3) + scale_size(range = c(0.2, 0.2))
all_BEAM1 <- BEAM(cds_NE, branch_point = 1)
all_BEAM1 <- all_BEAM1[order(all_BEAM1$qval),]
plot_genes_branched_heatmap(cds_NE[row.names(subset(all_BEAM1, qval < 1e-20)),], branch_point = 1, cluster_rows = T, show_rownames = T)
dim(all_BEAM1)
all_BEAM1_order <- all_BEAM1[order(all_BEAM1$qval),]
dim(all_BEAM1_order)
sub_BEAM1 <- all_BEAM1_order[1:100,]
sub_BEAM1 <- sub_BEAM1[row.names(subset(sub_BEAM1, num_cells_expressed > 100)),]
dim(sub_BEAM1)
#write.csv(sub_BEAM1, file = "sub_BEAM1.csv")
diff_NE <- differentialGeneTest(cds_NE[all_NE_expressed_genes,], fullModelFormulaStr = "~sm.ns(Pseudotime)")
sig_gene_names <- row.names(subset(diff_NE, qval < 1e-45))
plot_pseudotime_heatmap(cds_NE[sig_gene_names,], show_rownames = T)
knit_with_parameters('~/darmanis_group_utils/monocle/monoRunThrough.Rmd')
library(monocle)
raw_data <- read.csv('all_NE_raw.csv', header=TRUE)
row.names(raw_data) <- raw_data[,1]
raw_data <- raw_data[ ,-1]
meta_data <- read.csv('all_NE_meta.csv', header=TRUE)
row.names(meta_data) <- meta_data[,1]
meta_data <- meta_data[ ,-1]
dim(raw_data)
dim(meta_data)
meta_data_anno <- new("AnnotatedDataFrame", data = meta_data)
cds_NE <- newCellDataSet(cellData = as.matrix(raw_data), phenoData = meta_data_anno, featureData = NULL, expressionFamily = negbinomial.size())
cds_NE <- estimateSizeFactors(cds_NE)
cds_NE <- estimateDispersions(cds_NE)
cds_NE <- detectGenes(cds_NE, min_expr = 0.1)
fData(cds_NE)$use_for_ordering <- fData(cds_NE)$num_cells_expressed > 0.05 * ncol(cds_NE)
all_NE_expressed_genes <- row.names(subset(fData(cds_NE), num_cells_expressed >= 10))
plot_pc_variance_explained(cds_NE, return_all = F, verbose = T, max_components = 100)
cds_NE <- reduceDimension(cds_NE, max_components = 2, norm_method = 'log', num_dim = 20, reduction_method = 'tSNE', verbose = T)
cds_NE <- clusterCells(cds_NE, verbose = F)
plot_cell_clusters(cds_NE)
plot_rho_delta(cds_NE, rho_threshold = 2, delta_threshold = 4 )
cds_NE <- clusterCells(cds_NE, rho_threshold = 3, delta_threshold = 10, skip_rho_sigma = T, verbose = F)
plot_cell_clusters(cds_NE)
clustering_DEG_genes_NE <- differentialGeneTest(cds_NE[all_NE_expressed_genes,], fullModelFormulaStr = '~Cluster')
all_NE_ordering_genes <-
row.names(clustering_DEG_genes_NE)[order(clustering_DEG_genes_NE$qval)][1:1000]
cds_NE <- setOrderingFilter(cds_NE, ordering_genes = all_NE_ordering_genes)
cds_NE <- reduceDimension(cds_NE, method = 'DDRTree')
cds_NE <- orderCells(cds_NE)
plot_cell_trajectory(cds_NE, color_by = "State")
plot_cell_trajectory(cds_NE, color_by = "origin")
plot_cell_trajectory(cds_NE, color_by = "age")
plot_cell_trajectory(cds_NE, color_by = "Cluster")
# most basic case
plot_complex_cell_trajectory(cds_NE, color_by = 'Cluster')
plot_complex_cell_trajectory(cds_NE, color_by = 'State')
plot_complex_cell_trajectory(cds_NE, color_by = 'age')
# a bit more complicated
plot_complex_cell_trajectory(cds_NE, color_by = 'age', cell_size = 0.5, cell_link_size = 0.3) + scale_size(range = c(0.2, 0.2))
all_BEAM1 <- BEAM(cds_NE, branch_point = 1)
all_BEAM1 <- all_BEAM1[order(all_BEAM1$qval),]
plot_genes_branched_heatmap(cds_NE[row.names(subset(all_BEAM1, qval < 1e-20)),], branch_point = 1, cluster_rows = T, show_rownames = T)
dim(all_BEAM1)
all_BEAM1_order <- all_BEAM1[order(all_BEAM1$qval),]
dim(all_BEAM1_order)
sub_BEAM1 <- all_BEAM1_order[1:100,]
sub_BEAM1 <- sub_BEAM1[row.names(subset(sub_BEAM1, num_cells_expressed > 100)),]
dim(sub_BEAM1)
#write.csv(sub_BEAM1, file = "sub_BEAM1.csv")
diff_NE <- differentialGeneTest(cds_NE[all_NE_expressed_genes,], fullModelFormulaStr = "~sm.ns(Pseudotime)")
sig_gene_names <- row.names(subset(diff_NE, qval < 1e-45))
plot_pseudotime_heatmap(cds_NE[sig_gene_names,], show_rownames = T)
library(monocle)
raw_data <- read.csv('all_NE_raw.csv', header=TRUE)
row.names(raw_data) <- raw_data[,1]
raw_data <- raw_data[ ,-1]
meta_data <- read.csv('all_NE_meta.csv', header=TRUE)
row.names(meta_data) <- meta_data[,1]
meta_data <- meta_data[ ,-1]
dim(raw_data)
dim(meta_data)
meta_data_anno <- new("AnnotatedDataFrame", data = meta_data)
cds_NE <- newCellDataSet(cellData = as.matrix(raw_data), phenoData = meta_data_anno, featureData = NULL, expressionFamily = negbinomial.size())
cds_NE <- estimateSizeFactors(cds_NE)
cds_NE <- estimateDispersions(cds_NE)
cds_NE <- detectGenes(cds_NE, min_expr = 0.1)
fData(cds_NE)$use_for_ordering <- fData(cds_NE)$num_cells_expressed > 0.05 * ncol(cds_NE)
all_NE_expressed_genes <- row.names(subset(fData(cds_NE), num_cells_expressed >= 10))
plot_pc_variance_explained(cds_NE, return_all = F, verbose = T, max_components = 100)
cds_NE <- reduceDimension(cds_NE, max_components = 2, norm_method = 'log', num_dim = 20, reduction_method = 'tSNE', verbose = T)
cds_NE <- clusterCells(cds_NE, verbose = F)
plot_cell_clusters(cds_NE)
plot_rho_delta(cds_NE, rho_threshold = 2, delta_threshold = 4 )
cds_NE <- clusterCells(cds_NE, rho_threshold = 3, delta_threshold = 10, skip_rho_sigma = T, verbose = F)
plot_cell_clusters(cds_NE)
clustering_DEG_genes_NE <- differentialGeneTest(cds_NE[all_NE_expressed_genes,], fullModelFormulaStr = '~Cluster')
all_NE_ordering_genes <-
row.names(clustering_DEG_genes_NE)[order(clustering_DEG_genes_NE$qval)][1:1000]
cds_NE <- setOrderingFilter(cds_NE, ordering_genes = all_NE_ordering_genes)
cds_NE <- reduceDimension(cds_NE, method = 'DDRTree')
cds_NE <- orderCells(cds_NE)
plot_cell_trajectory(cds_NE, color_by = "State")
plot_cell_trajectory(cds_NE, color_by = "origin")
plot_cell_trajectory(cds_NE, color_by = "age")
plot_cell_trajectory(cds_NE, color_by = "Cluster")
# most basic case
plot_complex_cell_trajectory(cds_NE, color_by = 'Cluster')
plot_complex_cell_trajectory(cds_NE, color_by = 'State')
plot_complex_cell_trajectory(cds_NE, color_by = 'age')
# a bit more complicated
plot_complex_cell_trajectory(cds_NE, color_by = 'age', cell_size = 0.5, cell_link_size = 0.3) + scale_size(range = c(0.2, 0.2))
all_BEAM1 <- BEAM(cds_NE, branch_point = 1)
all_BEAM1 <- all_BEAM1[order(all_BEAM1$qval),]
plot_genes_branched_heatmap(cds_NE[row.names(subset(all_BEAM1, qval < 1e-20)),], branch_point = 1, cluster_rows = T, show_rownames = T)
dim(all_BEAM1)
all_BEAM1_order <- all_BEAM1[order(all_BEAM1$qval),]
dim(all_BEAM1_order)
sub_BEAM1 <- all_BEAM1_order[1:100,]
sub_BEAM1 <- sub_BEAM1[row.names(subset(sub_BEAM1, num_cells_expressed > 100)),]
dim(sub_BEAM1)
#write.csv(sub_BEAM1, file = "sub_BEAM1.csv")
diff_NE <- differentialGeneTest(cds_NE[all_NE_expressed_genes,], fullModelFormulaStr = "~sm.ns(Pseudotime)")
sig_gene_names <- row.names(subset(diff_NE, qval < 1e-45))
plot_pseudotime_heatmap(cds_NE[sig_gene_names,], show_rownames = T)
library(monocle)
raw_data <- read.csv('all_NE_raw.csv', header=TRUE)
row.names(raw_data) <- raw_data[,1]
raw_data <- raw_data[ ,-1]
meta_data <- read.csv('all_NE_meta.csv', header=TRUE)
row.names(meta_data) <- meta_data[,1]
meta_data <- meta_data[ ,-1]
dim(raw_data)
dim(meta_data)
meta_data_anno <- new("AnnotatedDataFrame", data = meta_data)
cds_NE <- newCellDataSet(cellData = as.matrix(raw_data), phenoData = meta_data_anno, featureData = NULL, expressionFamily = negbinomial.size())
cds_NE <- estimateSizeFactors(cds_NE)
cds_NE <- estimateDispersions(cds_NE)
cds_NE <- detectGenes(cds_NE, min_expr = 0.1)
fData(cds_NE)$use_for_ordering <- fData(cds_NE)$num_cells_expressed > 0.05 * ncol(cds_NE)
all_NE_expressed_genes <- row.names(subset(fData(cds_NE), num_cells_expressed >= 10))
plot_pc_variance_explained(cds_NE, return_all = F, verbose = T, max_components = 100)
cds_NE <- reduceDimension(cds_NE, max_components = 2, norm_method = 'log', num_dim = 20, reduction_method = 'tSNE', verbose = T)
cds_NE <- clusterCells(cds_NE, verbose = F)
plot_cell_clusters(cds_NE)
plot_rho_delta(cds_NE, rho_threshold = 2, delta_threshold = 4 )
cds_NE <- clusterCells(cds_NE, rho_threshold = 3, delta_threshold = 10, skip_rho_sigma = T, verbose = F)
plot_cell_clusters(cds_NE)
clustering_DEG_genes_NE <- differentialGeneTest(cds_NE[all_NE_expressed_genes,], fullModelFormulaStr = '~Cluster')
all_NE_ordering_genes <-
row.names(clustering_DEG_genes_NE)[order(clustering_DEG_genes_NE$qval)][1:1000]
cds_NE <- setOrderingFilter(cds_NE, ordering_genes = all_NE_ordering_genes)
cds_NE <- reduceDimension(cds_NE, method = 'DDRTree')
cds_NE <- orderCells(cds_NE)
plot_cell_trajectory(cds_NE, color_by = "State")
plot_cell_trajectory(cds_NE, color_by = "origin")
plot_cell_trajectory(cds_NE, color_by = "age")
plot_cell_trajectory(cds_NE, color_by = "Cluster")
# most basic case
plot_complex_cell_trajectory(cds_NE, color_by = 'Cluster')
plot_complex_cell_trajectory(cds_NE, color_by = 'State')
plot_complex_cell_trajectory(cds_NE, color_by = 'age')
# a bit more complicated
plot_complex_cell_trajectory(cds_NE, color_by = 'age', cell_size = 0.5, cell_link_size = 0.3) + scale_size(range = c(0.2, 0.2))
all_BEAM1 <- BEAM(cds_NE, branch_point = 1)
all_BEAM1 <- all_BEAM1[order(all_BEAM1$qval),]
plot_genes_branched_heatmap(cds_NE[row.names(subset(all_BEAM1, qval < 1e-20)),], branch_point = 1, cluster_rows = T, show_rownames = T)
dim(all_BEAM1)
all_BEAM1_order <- all_BEAM1[order(all_BEAM1$qval),]
dim(all_BEAM1_order)
sub_BEAM1 <- all_BEAM1_order[1:100,]
sub_BEAM1 <- sub_BEAM1[row.names(subset(sub_BEAM1, num_cells_expressed > 100)),]
dim(sub_BEAM1)
#write.csv(sub_BEAM1, file = "sub_BEAM1.csv")
diff_NE <- differentialGeneTest(cds_NE[all_NE_expressed_genes,], fullModelFormulaStr = "~sm.ns(Pseudotime)")
sig_gene_names <- row.names(subset(diff_NE, qval < 1e-45))
plot_pseudotime_heatmap(cds_NE[sig_gene_names,], show_rownames = T)
immune <- read.csv("/Users/lincoln.harris/Desktop/immune_cells_180918.txt")
View(immune)
immune[1]
immune[1,1]
strsplit(immune[1,1], " ")
?strsplit
immune[1,1]
immune[1,1][1]
immune[1,1][2]
immune[1,1][[1]]
immune[1,1][[2]]
immune[1,1][[1]]
immune[1,1]
strsplit(immune[1,1], "A")
class(immune[1,1])
immune[1,1] <- as.character(immune[1,1])
strsplit(immune[1,1], "A")
immune[1,1]
strsplit(immune[1,1], "A")
strsplit(immune[1,1], " ")
immune[1,1]
class(immune[1,1])
immune[1,1] <- as.character(immune[1,1])
strsplit(immune[1,1], " ")
strsplit(as.character(immune[1,1]), " ")
splt <- strsplit(as.character(immune[1,1]), " ")
splt[2]
splt[[1]]
splt[[1]][2]
keepList <- c()
for(i in 1:length(immune$x)){
splt <- strsplit(as.character(immune[1,x]), " ")
splt[[1]][2]
}
keepList <- c()
for(i in 1:length(immune$x)){
splt <- strsplit(as.character(immune[1,i]), " ")
splt[[1]][2]
}
keepList <- c()
for(i in 1:length(immune$x)){
splt <- strsplit(as.character(immune[i,1]), " ")
splt[[1]][2]
}
keepList <- c()
for(i in 1:length(immune$x)){
splt <- strsplit(as.character(immune[i,1]), " ")
print(splt[[1]][2])
}
keepList <- c()
for(i in 1:length(immune$x)){
splt <- strsplit(as.character(immune[i,1]), " ")
keepList <- c(keepList, splt[[1]][2])
}
keepList
write.csv(keepList, "immuneList.csv", quote = F, row.names = F)
t <- read.csv("immuneList.csv")
View(t)
getwd()
write.csv(keepList, "/Users/lincoln.harris/Desktop/immuneList.csv", quote = F, row.names = F)
keepList1 <- c()
for(i in 1:length(nonimmune$x)){
splt1 <- strsplit(as.character(nonimmune[i,1]), " ")
keepList1 <- c(keepList1, splt1[[1]][2])
}
immune <- read.csv("/Users/lincoln.harris/Desktop/immune_cells_180918.txt")
nonimmune <- read.csv("/Users/lincoln.harris/Desktop/nonimmune_cells_180918.txt")
keepList1 <- c()
for(i in 1:length(nonimmune$x)){
splt1 <- strsplit(as.character(nonimmune[i,1]), " ")
keepList1 <- c(keepList1, splt1[[1]][2])
}
write.csv(keepList, "/Users/lincoln.harris/Desktop/immuneList.csv", quote = F, row.names = F)
write.csv(keepList1, "/Users/lincoln.harris/Desktop/nonimmuneList.csv", quote = F, row.names = F)
setwd("/Users/lincoln.harris/code/SNP_calling_pipeline/r_notebooks/")
